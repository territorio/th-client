require "rake-pipeline-web-filters"
require 'rake-pipeline-web-filters/filter_with_dependencies'
require "uglifier"

$: << 'app/submodules/th-client-core/rakep'
require "th_filters"

Encoding.default_external = Encoding::UTF_8
Encoding.default_internal = Encoding::UTF_8


## Require to precompile handlebars views
output "dist"  
input "app/submodules/ember.js/packages" do
	match "ember-handlebars-compiler/lib/**/.js" do
    filter Th::EmberStub
    concat "ember-template-compiler.js"
	end
end


output "source"
input "app/submodules/th-client-views/assets"  do
	match "**/*" do
    copy
  end
end


output "tmp/source"
input "."  do

	match "app/submodules/th-client-views/styles/**/*.css" do
		concat "projecttmp.css"
	end

end

input "app"  do

	match "submodules/th-client-views/templates/**/*.hbs" do
    filter Th::CustomHandlebarsPrecompiler, :inline => false
		filter ConcatFilter, "apptmp.js"
    filter Th::AddHandlebarsDependencies
	end


  config = ( !ENV['APP_ENV'].nil? &&  !ENV['APP_ENV'].empty? ) ? ENV['APP_ENV'] : "default"
 
	match "app/config/#{config}.js" do

		minispade :rewrite_requires => true, :string=> false, :module_id_generator => proc { |input|
			id = input.path.dup
			id.sub!(/\/[a-z\-\.]+.js$/, '') #filter the name of the file.js
			id
		}
		concat "apptmp.js"
	end

	match "app/lib/**/*.js" do
		minispade :rewrite_requires => true, :string=> false, :module_id_generator => proc { |input|
			id = input.path.dup
			id.sub!('/lib/', '/')
			id.sub!(/\.js$/, '')
			id.sub!(/\/main$/, '')
			id
		}
		concat "apptmp.js"
	end

	match "submodules/{th-client-core,th-client-views}/lib/**/*.js" do
		minispade :rewrite_requires => true, :string=> false, :module_id_generator => proc { |input|
			id = input.path.dup
			id.sub!('submodules/', '')
			id.sub!('/lib/', '/')
			id.sub!(/\.js$/, '')
			id.sub!(/\/main$/, '')
			id
		}
	 concat "apptmp.js"
	end


	match "submodules/*/packages/{ember-data,ember-application,ember-routing,ember-debug,ember-metal,ember-runtime,ember-states,ember-views,rsvp,container,metamorph,ember-handlebars,ember-handlebars-compiler,ember-touch}/lib/**/.js" do
		minispade :rewrite_requires => true, :string=> false, :module_id_generator => proc { |input|
			id = input.path.dup
			id.sub!('submodules/', '')
			id.sub!(/[a-z\-\.]+\//, '')
			id.sub!('packages/', '')
			id.sub!('/lib/', '/')
			id.sub!(/\.js$/, '')
			id.sub!(/\/main$/, '')
			id
		}
	 concat "apptmp.js"
   filter Th::CustomHandlebarsPrecompiler, :inline => true
   filter Th::AddMicroLoader, :global => true
	end

	match "submodules/th-client-core/vendor/*.js" do
		filter ConcatFilter, "apptmp.js"
	end

end

output "source"
input "tmp/source"  do

	match "apptmp.js" do
		filter ConcatFilter, "app.js"
	end


end

output "source/css"
input "tmp/source"  do

	match "projecttmp.css" do
		filter ConcatFilter, "project.css"
	end

end


# vim: filetype=ruby
